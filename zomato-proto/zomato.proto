syntax = "proto3";

option go_package = "mock-grpc/zomato-proto/proto";

package zomatoDB;

service ZomatoDatabaseCrud {
    //user rpc
    rpc CreateUser(NewUser) returns (User) {} 
    rpc UpdateUser(User) returns (User){}
    rpc GetUsers(VoidUserRequest) returns (AllUsers){}
    rpc GetUserOrders(User) returns (UserOrder){}
    rpc PlaceOrder(OrderRequest) returns (Order) {}

    //restaurant rpc
    rpc CreateRestaurant(NewRestaurant) returns (Restaurant){}
    rpc GetRestaurantMenu(RestaurantMenuRequest) returns (Menu){} 
    rpc UpdateRestaurant(Restaurant) returns (Restaurant){}

    //menu rpc
    rpc CreateDish(NewDish) returns (Dish){}
    rpc UpdateDish(Dish) returns (Dish){}
    rpc DeleteDish(Dish) returns (VoidDishResponse){} 

    //agent rpc
    rpc CreateAgent(NewAgent) returns (Agent){}
    rpc UpdateAgentStatus(AgentStatus) returns (AgentStatus){}
}

message User{
    int64 id=1;
    string name=2 ;
    string phone = 5;
    string address=3;
    string email=4;
}

message NewUser {
    int64 id=1;
    string name=2 ;
    string phone=5;
    string address=3;
    string email=4;
}
message UserOrder{
    repeated OrderItem orderItems = 1;
}
message AllUsers{
    repeated User AllUsers = 1;
}
message VoidUserRequest{}


message OrderItem {
	int64 DishId=1;
	int64 Quantity=2;
}

message NewRestaurant{
    string Name = 1;     
    string Address = 2; 
	string Timings = 3; 
	string Email   = 4; 
	string Password =5;
	bool IsActive = 6;
}

message Restaurant{
    string Name = 1;     
    string Address = 2; 
	string Timings = 3; 
	string Email   = 4; 
	string Password =5;
	bool IsActive = 6;
}

message NewDish{
    string Name=1;        
	string Description=2; 
	string Image =3;      
	int64 Price=4;        
	int64 RestaurantId=5;
	bool IsAvailable=6;
	bool IsVeg=7;      
	string Cuisine =8;     
	string Category =9;    
}
message Dish{
    string Name=1;        
	string Description=2; 
	string Image =3;      
	int64 Price=4;        
	int64 RestaurantId=5;
	bool IsAvailable=6;
	bool IsVeg=7;      
	string Cuisine =8;     
	string Category =9;    
}

message VoidDishResponse{}


message RestaurantMenuRequest{
    int64 RestaurantID = 1;
}
message Menu{
    repeated Dish dishes = 1;
}

message NewAgent{
    string Name = 1;
    string Phone = 2;
    string Address = 3;
    string Email = 4;
    bool IsActive = 5;
    int64 CurrentOrderId = 6;
}

message Agent{
    int64 Id = 7;
    string Name = 1;
    string Phone = 2;
    string Address = 3;
    string Email = 4;
    bool IsActive = 5;
    int64 CurrentOrderId = 6;
}
message AgentStatus{
    string Name = 1;
    bool IsActive = 2;
}
message OrderID{
    int64 Id = 1;
}
message AgentOrders{
    repeated OrderID OrderID=1;
}

message VoidOrderResponse{}
message OrderRequest{
    int64 UserID = 1;
    int64 RestaurantID = 2;
}
message Order{
    int64 OrderID =1;
    int64 UserID =2;
    int64 AgentID = 3;
    int64 RestaurantID = 4;
}
// message NewOrder{
//     int64 Id = 1;
//     int64 UserId = 1;
//     int64 AgentId
// }