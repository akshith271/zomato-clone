// Code generated by MockGen. DO NOT EDIT.
// Source: mock-grpc/pkg/database (interfaces: DataBaseLayer)

// Package mocks is a generated GoMock package.
package mocks

import (
	models "mock-grpc/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDataBaseLayer is a mock of DataBaseLayer interface.
type MockDataBaseLayer struct {
	ctrl     *gomock.Controller
	recorder *MockDataBaseLayerMockRecorder
}

// MockDataBaseLayerMockRecorder is the mock recorder for MockDataBaseLayer.
type MockDataBaseLayerMockRecorder struct {
	mock *MockDataBaseLayer
}

// NewMockDataBaseLayer creates a new mock instance.
func NewMockDataBaseLayer(ctrl *gomock.Controller) *MockDataBaseLayer {
	mock := &MockDataBaseLayer{ctrl: ctrl}
	mock.recorder = &MockDataBaseLayerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDataBaseLayer) EXPECT() *MockDataBaseLayerMockRecorder {
	return m.recorder
}

// CreateAgent mocks base method.
func (m *MockDataBaseLayer) CreateAgent(arg0 models.Agent) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAgent", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateAgent indicates an expected call of CreateAgent.
func (mr *MockDataBaseLayerMockRecorder) CreateAgent(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAgent", reflect.TypeOf((*MockDataBaseLayer)(nil).CreateAgent), arg0)
}

// CreateDish mocks base method.
func (m *MockDataBaseLayer) CreateDish(arg0 models.Dish) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDish", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateDish indicates an expected call of CreateDish.
func (mr *MockDataBaseLayerMockRecorder) CreateDish(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDish", reflect.TypeOf((*MockDataBaseLayer)(nil).CreateDish), arg0)
}

// CreateOrder mocks base method.
func (m *MockDataBaseLayer) CreateOrder(arg0 models.Order) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrder", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateOrder indicates an expected call of CreateOrder.
func (mr *MockDataBaseLayerMockRecorder) CreateOrder(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrder", reflect.TypeOf((*MockDataBaseLayer)(nil).CreateOrder), arg0)
}

// CreateRestaurant mocks base method.
func (m *MockDataBaseLayer) CreateRestaurant(arg0 models.Restaurant) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRestaurant", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateRestaurant indicates an expected call of CreateRestaurant.
func (mr *MockDataBaseLayerMockRecorder) CreateRestaurant(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRestaurant", reflect.TypeOf((*MockDataBaseLayer)(nil).CreateRestaurant), arg0)
}

// CreateUser mocks base method.
func (m *MockDataBaseLayer) CreateUser(arg0 models.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockDataBaseLayerMockRecorder) CreateUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockDataBaseLayer)(nil).CreateUser), arg0)
}

// DeleteDish mocks base method.
func (m *MockDataBaseLayer) DeleteDish(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteDish", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteDish indicates an expected call of DeleteDish.
func (mr *MockDataBaseLayerMockRecorder) DeleteDish(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDish", reflect.TypeOf((*MockDataBaseLayer)(nil).DeleteDish), arg0)
}

// GetAllActiveAgents mocks base method.
func (m *MockDataBaseLayer) GetAllActiveAgents() ([]models.Agent, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllActiveAgents")
	ret0, _ := ret[0].([]models.Agent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllActiveAgents indicates an expected call of GetAllActiveAgents.
func (mr *MockDataBaseLayerMockRecorder) GetAllActiveAgents() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllActiveAgents", reflect.TypeOf((*MockDataBaseLayer)(nil).GetAllActiveAgents))
}

// GetRestaurantMenu mocks base method.
func (m *MockDataBaseLayer) GetRestaurantMenu(arg0 models.Restaurant) ([]models.Dish, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRestaurantMenu", arg0)
	ret0, _ := ret[0].([]models.Dish)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRestaurantMenu indicates an expected call of GetRestaurantMenu.
func (mr *MockDataBaseLayerMockRecorder) GetRestaurantMenu(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRestaurantMenu", reflect.TypeOf((*MockDataBaseLayer)(nil).GetRestaurantMenu), arg0)
}

// GetUserOrders mocks base method.
func (m *MockDataBaseLayer) GetUserOrders(arg0 models.User) ([]models.OrderItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserOrders", arg0)
	ret0, _ := ret[0].([]models.OrderItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserOrders indicates an expected call of GetUserOrders.
func (mr *MockDataBaseLayerMockRecorder) GetUserOrders(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserOrders", reflect.TypeOf((*MockDataBaseLayer)(nil).GetUserOrders), arg0)
}

// GetUsers mocks base method.
func (m *MockDataBaseLayer) GetUsers() ([]models.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsers")
	ret0, _ := ret[0].([]models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUsers indicates an expected call of GetUsers.
func (mr *MockDataBaseLayerMockRecorder) GetUsers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsers", reflect.TypeOf((*MockDataBaseLayer)(nil).GetUsers))
}

// UpdateAgentStatus mocks base method.
func (m *MockDataBaseLayer) UpdateAgentStatus(arg0 models.Agent) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAgentStatus", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateAgentStatus indicates an expected call of UpdateAgentStatus.
func (mr *MockDataBaseLayerMockRecorder) UpdateAgentStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAgentStatus", reflect.TypeOf((*MockDataBaseLayer)(nil).UpdateAgentStatus), arg0)
}

// UpdateDish mocks base method.
func (m *MockDataBaseLayer) UpdateDish(arg0 models.Dish) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateDish", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateDish indicates an expected call of UpdateDish.
func (mr *MockDataBaseLayerMockRecorder) UpdateDish(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDish", reflect.TypeOf((*MockDataBaseLayer)(nil).UpdateDish), arg0)
}

// UpdateRestaurant mocks base method.
func (m *MockDataBaseLayer) UpdateRestaurant(arg0 models.Restaurant) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateRestaurant", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateRestaurant indicates an expected call of UpdateRestaurant.
func (mr *MockDataBaseLayerMockRecorder) UpdateRestaurant(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateRestaurant", reflect.TypeOf((*MockDataBaseLayer)(nil).UpdateRestaurant), arg0)
}

// UpdateUser mocks base method.
func (m *MockDataBaseLayer) UpdateUser(arg0 models.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateUser", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateUser indicates an expected call of UpdateUser.
func (mr *MockDataBaseLayerMockRecorder) UpdateUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateUser", reflect.TypeOf((*MockDataBaseLayer)(nil).UpdateUser), arg0)
}
